import { ConvexAuthNextjsServerProvider } from '@convex-dev/auth/nextjs/server';
import type { Metadata } from 'next';
import localFont from 'next/font/local';

import { ConvexClientProvider } from '@/context/ConvexClientProvider';
import { SheetContextProvider } from '@/context/SheetContextProvider';
import { ThemeProvider } from '@/context/ThemeProvider';

import './globals.css';

const geistSans = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900',
});
const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900',
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

function setInitialTheme() {
  const theme = localStorage.getItem('theme');
  if (theme) {
    document.documentElement.classList.add(theme);
  } else {
    document.documentElement.classList.add('light');
  }
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ThemeProvider>
      <ConvexAuthNextjsServerProvider>
        <html lang='en'>
          <head>
            <script
              dangerouslySetInnerHTML={{
                __html: `(${setInitialTheme.toString()})()`,
              }}
            />
          </head>
          <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
            <ConvexClientProvider>
              <SheetContextProvider>{children}</SheetContextProvider>
            </ConvexClientProvider>
          </body>
        </html>
      </ConvexAuthNextjsServerProvider>
    </ThemeProvider>
  );
}
